---

- name: "Get host-specific files-directory for {{ project_name }}"
  ansible.builtin.stat:
    path: "{{ playbook_dir + '/docker-project-deployment/host_files/' + inventory_hostname + '/' + project_name }}"
  delegate_to: "localhost"
  become: false
  register: host_files_dir

- name: "Get files-directory for {{ project_name }}"
  ansible.builtin.stat:
    path: "{{ playbook_dir + '/docker-project-deployment/files/' + project_name }}"
  delegate_to: "localhost"
  become: false
  register: files_dir

- name: "Deploy files-directory for {{ project_name }}"
  ansible.builtin.include_tasks: "deploy_directory.yml"
  vars:
    directory: "{{ files_dir }}"
    file_type: 'file'
  when: files_dir.stat.isdir is defined and files_dir.stat.isdir

- name: "Get templates-directory for {{ project_name }}"
  ansible.builtin.stat:
    path: "{{ playbook_dir + '/docker-project-deployment/templates/' + project_name }}"
  delegate_to: "localhost"
  become: false
  register: templates_dir

- name: "Deploy templates-directory for {{ project_name }}"
  ansible.builtin.include_tasks: "deploy_directory.yml"
  vars:
    directory: "{{ templates_dir }}"
    file_type: 'template'
  when: templates_dir.stat.isdir is defined and templates_dir.stat.isdir

- name: "Get docker-compose.yml host-file for {{ project_name }}"
  ansible.builtin.stat:
    path: "{{ playbook_dir + '/docker-project-deployment/host_files/' + inventory_hostname + '/' + project_name + '/docker-compose.yml' }}"
  delegate_to: "localhost"
  become: false
  register: host_compose_file

- name: Copy docker-compose.yml template block
  when: not host_compose_file.stat.exists
  block:
    - name: "Build and copy docker-compose.yml for {{ project_name }}"
      ansible.builtin.template:
        src: "docker-compose.yml.j2"
        dest: "{{ project_dir + '/docker-compose.yml' }}"
        mode: "{{ project_deployment_file_mode }}"
        owner: "{{ project_deployment_owner }}"
        group: "{{ project_deployment_group }}"
        lstrip_blocks: true
      register: compose_copy_result
      become: true

    - name: "Notify restart handler if changes occured and file requires a restart"
      ansible.builtin.assert:  # workaround to do nothing but still notify a handler
        that: true
        quiet: true
      changed_when: true
      when: compose_copy_result.changed and not ((project_dir + '/docker-compose.yml') | ifalatik.docker.any_regex_matches(regex_ignore_changes_remote_paths))
      notify: ["Stop project", "Start project"]

- name: "Ensure docker-compose.yaml doesn't exists for {{ project_name }}"
  ansible.builtin.file:
    path: "{{ project_dir + '/docker-compose.yaml' }}"
    state: "absent"
  become: true

- name: "Deploy host-specific files for {{ project_name }}"
  ansible.builtin.include_tasks: "deploy_directory.yml"
  vars:
    directory: "{{ host_files_dir }}"
    file_type: 'host_file'
  when: host_files_dir.stat.isdir is defined and host_files_dir.stat.isdir

...
